---
- name: Transitionary getlegit update playbook. (make fully managed on release of debian 11)
  hosts: getlegit
  become: yes
  roles:
    - role: common
    - role: debian-docker
    - role: debian-harden
  vars_files: ./vars/getlegit.yml

  handlers:
    - name: Reboot target
      reboot:

  tasks:
    - name: Generate ssh key for use with github
      community.crypto.openssh_keypair:
        comment: github/robinedmunds
        force: no # do NOT overwrite existing key
        group: docker
        mode: 0640
        owner: ansible
        path: /srv/keys/id_ed25519
        regenerate: never # do NOT overwrite existing key
        state: present
        type: ed25519

    - name: Add safe directory to git
      command: git config --global --add safe.directory "{{ compose_parent_dir }}"

    - name: Clone robinedmunds/getlegit-docker-compose repo
      ansible.builtin.git:
        accept_newhostkey: yes
        update: yes
        clone: yes
        force: yes
        key_file: /srv/keys/id_ed25519
        remote: remote
        repo: git@github.com:robinedmunds/getlegit-docker-compose.git
        dest: "{{ compose_parent_dir }}"

    - name: Set ownership of getlegit-docker-compose repo files
      ansible.builtin.file:
        group: docker
        mode: 0664
        owner: robin
        path: "{{ compose_parent_dir }}"
        recurse: yes
        state: directory

    - name: Set getlegit-docker-compose dirs to listable
      ansible.builtin.command:
        chdir: "{{ compose_parent_dir }}"
        cmd: find . -type d -exec chmod +x {} \;

    - name: Set nextcloud cronjob script to executable
      ansible.builtin.file:
        mode: 0774
        path: "{{ compose_parent_dir }}/nextcloud/cron.sh"

    - name: Add crontab for nextcloud cronjob
      ansible.builtin.cron:
        backup: no
        day: "*"
        disabled: no
        hour: "*"
        job: "{{ compose_parent_dir }}/nextcloud/cron.sh >/dev/null 2>&1"
        minute: "*/5"
        month: "*"
        name: nextcloud_cron
        state: present
        user: robin
        weekday: "*"

    - name: Set teamspeak renice cronjob script to executable
      ansible.builtin.file:
        mode: 0774
        path: "{{ compose_parent_dir }}/teamspeak/renice.sh"

    - name: Add crontab for teamspeak cpu priority increase
      ansible.builtin.cron:
        backup: no
        disabled: no
        job: "{{ compose_parent_dir }}/teamspeak/renice.sh >/dev/null 2>&1"
        name: Increase CPU priority of teamspeak server
        special_time: hourly
        state: present
        user: root
          

    # FIXME: docker-compose EOL. convert to shell commands
          
    - name: Stop all docker-compose services
      ansible.builtin.shell:
        chdir: "{{ compose_parent_dir }}/{{ item }}"
        cmd: "docker compose down"
      loop: "{{ compose_services }}"
      register: output

    - ansible.builtin.debug:
        var: output

    - name: Stop mariadb docker-compose service
      ansible.builtin.shell:
        chdir: "{{ compose_parent_dir }}/mariadb"
        cmd: "docker compose down"
      register: output

    - ansible.builtin.debug:
        var: output

    - name: Pull fresh mariadb image, start mariadb docker-compose service
      ansible.builtin.shell:
        chdir: "{{ compose_parent_dir }}/mariadb"
        cmd: "docker compose pull"
      register: output

    - ansible.builtin.debug:
        var: output

    - name: Pull fresh images, start all docker-compose services
      ansible.builtin.shell:
        chdir: "{{ compose_parent_dir }}/{{ item }}"
        cmd: "docker compose pull"
      loop: "{{ compose_services }}"
      register: output

    - ansible.builtin.debug:
        var: output

    - name: Run nextcloud maintenance commands inside container
      ansible.builtin.shell:
        chdir: "{{ compose_parent_dir }}/nextcloud"
        cmd: "docker compose exec --detach app {{ item }}"
      loop:
        - runuser -u www-data -- php occ maintenance:mode --on
        - runuser -u www-data -- php occ db:add-missing-indices
        - runuser -u www-data -- php occ maintenance:mode --off
      register: output

    - ansible.builtin.debug:
        var: output

    - name: Remove redundant docker images
      community.docker.docker_prune:
        images: yes
